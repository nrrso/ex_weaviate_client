# NOTE: This file is auto generated by OpenAPI Generator 7.3.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Weaviate.Model.WhereFilter do
  @moduledoc """
  Filter search results using a where filter
  """

  @derive Jason.Encoder
  defstruct [
    :operands,
    :operator,
    :path,
    :valueInt,
    :valueNumber,
    :valueBoolean,
    :valueString,
    :valueText,
    :valueDate,
    :valueIntArray,
    :valueNumberArray,
    :valueBooleanArray,
    :valueStringArray,
    :valueTextArray,
    :valueDateArray,
    :valueGeoRange
  ]

  @type t :: %__MODULE__{
    :operands => [Weaviate.Model.WhereFilter.t] | nil,
    :operator => String.t | nil,
    :path => [String.t] | nil,
    :valueInt => integer() | nil,
    :valueNumber => float() | nil,
    :valueBoolean => boolean() | nil,
    :valueString => String.t | nil,
    :valueText => String.t | nil,
    :valueDate => String.t | nil,
    :valueIntArray => [integer()] | nil,
    :valueNumberArray => [float()] | nil,
    :valueBooleanArray => [boolean()] | nil,
    :valueStringArray => [String.t] | nil,
    :valueTextArray => [String.t] | nil,
    :valueDateArray => [String.t] | nil,
    :valueGeoRange => Weaviate.Model.WhereFilterGeoRange.t | nil
  }

  alias Weaviate.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:operands, :list, Weaviate.Model.WhereFilter)
     |> Deserializer.deserialize(:valueGeoRange, :struct, Weaviate.Model.WhereFilterGeoRange)
  end
end

