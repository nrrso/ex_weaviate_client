# NOTE: This file is auto generated by OpenAPI Generator 7.3.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Weaviate.Api.Classifications do
  @moduledoc """
  API calls for all endpoints tagged `Classifications`.
  """

  alias Weaviate.Connection
  import Weaviate.RequestBuilder

  @doc """
  View previously created classification
  Get status, results and metadata of a previously created classification

  ### Parameters

  - `connection` (Weaviate.Connection): Connection to server
  - `id` (String.t): classification id
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, Weaviate.Model.Classification.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec classifications_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:ok, Weaviate.Model.Classification.t} | {:ok, Weaviate.Model.ErrorResponse.t} | {:error, Tesla.Env.t}
  def classifications_get(connection, id, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/classifications/#{id}")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, Weaviate.Model.Classification},
      {401, false},
      {403, Weaviate.Model.ErrorResponse},
      {404, false},
      {500, Weaviate.Model.ErrorResponse}
    ])
  end

  @doc """
  Starts a classification.
  Trigger a classification based on the specified params. Classifications will run in the background, use GET /classifications/<id> to retrieve the status of your classification.

  ### Parameters

  - `connection` (Weaviate.Connection): Connection to server
  - `params` (Classification): parameters to start a classification
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, Weaviate.Model.Classification.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec classifications_post(Tesla.Env.client, Weaviate.Model.Classification.t, keyword()) :: {:ok, nil} | {:ok, Weaviate.Model.Classification.t} | {:ok, Weaviate.Model.ErrorResponse.t} | {:error, Tesla.Env.t}
  def classifications_post(connection, params, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/classifications/")
      |> add_param(:body, :body, params)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {201, Weaviate.Model.Classification},
      {400, Weaviate.Model.ErrorResponse},
      {401, false},
      {403, Weaviate.Model.ErrorResponse},
      {500, Weaviate.Model.ErrorResponse}
    ])
  end
end
